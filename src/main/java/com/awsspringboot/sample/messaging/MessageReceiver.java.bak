package com.awsspringboot.sample.messaging;

import com.awsspringboot.sample.model.Event;
import io.awspring.cloud.messaging.config.annotation.NotificationMessage;
import org.springframework.messaging.handler.annotation.Header;
import org.springframework.stereotype.Service;

import io.awspring.cloud.messaging.listener.SqsMessageDeletionPolicy;
import io.awspring.cloud.messaging.listener.annotation.SqsListener;
import lombok.extern.slf4j.Slf4j;

//import static com.awsspringboot.sample.config.AWSConfigConstants.ORDER_QUEUE;

@Slf4j
@Service
public class MessageReceiver implements MessageConsumer{

   /* @SqsListener(value = "http://localhost:4566/000000000000/order-queue", deletionPolicy = SqsMessageDeletionPolicy.ON_SUCCESS )
    public void receiveStringMessage(final String message,
                                     @Header("SenderId") String senderId) {
        log.info("message received {} {}",senderId,message);
    }*/

    @Override
    @SqsListener(value = "http://localhost:4566/000000000000/order-queue", deletionPolicy = SqsMessageDeletionPolicy.ON_SUCCESS)
    public void consume(@NotificationMessage Event event) {
        log.info("***Received order event for consumer 1:{} " + event);
        if (event != null) {
            log.info("Received order event for consumer 1:{} " + event);
        }
    }
}
